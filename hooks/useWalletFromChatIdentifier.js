import{useMemo as r}from"react";import{useAsync as a}from"react-async-hook";import{useConnection as e}from"@solana/wallet-adapter-react";import{PublicKey as t}from"@solana/web3.js";import{ChatSdk as o}from"@strata-foundation/chat";import{useTokenAccount as n}from"@strata-foundation/react";import{useChatSdk as s}from"../contexts/chatSdk.js";import{useCaseInsensitiveMarker as i}from"./useCaseInsensitiveMarker.js";const c=c=>{const{connection:m}=e(),{chatSdk:l}=s(),{result:f,loading:d,error:p}=a((async r=>r?r.getNamespaces():void 0),[l]),{result:u,loading:g,error:w}=a((async(r,a)=>r&&a?o.caseInsensitiveMarkerKey(new t(a),r):void 0),[c,f?.chatNamespace.toBase58()]),{info:h,loading:k}=i(u&&u[0]),{result:v,loading:y,error:j}=a((async(r,a)=>{if(a){return(await r.getTokenLargestAccounts(a)).value[0].address}}),[m,h?.certificateMint]),{info:M}=n(v);return{loading:d||g||k||y,wallet:r((()=>{if(M&&f&&!M.owner.equals(f.chatNamespace))return M?.owner}),[f,M]),error:p||w||j}};export{c as useWalletFromChatIdentifier};
//# sourceMappingURL=useWalletFromChatIdentifier.js.map
