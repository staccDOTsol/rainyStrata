import{useWallet as e}from"@solana/wallet-adapter-react";import{Keypair as t}from"@solana/web3.js";import{useLocalStorage as o}from"@strata-foundation/react";import{mnemonicToSeedSync as r}from"bip39";import{useMemo as a}from"react";import{useAsync as l}from"react-async-hook";import{useWalletSettings as n}from"./useWalletSettings.js";const i="undefined"!=typeof localStorage?localStorage:require("localstorage-memory"),s={};function c(e){if(!s[e]){const o=r(e,""),a=t.fromSeed(o.slice(0,32));s[e]=a}return s[e]}class g{storageKey(e){return"delegate-wallet-"+e?.toBase58()}getDelegateWallet(e){const t=this.getDelegateWalletMnemonic(e);if(t)return c(t)}getDelegateWalletMnemonic(e){const t=i.getItem(this.storageKey(e));if(t)return t}setDelegateWallet(e,t){i.setItem(this.storageKey(e),t)}}const m=new g;function f(){const{publicKey:t}=e(),[r]=o(t?m.storageKey(t):"",void 0),i=a((()=>{if(r&&t)try{if(r)return m.getDelegateWallet(t)}catch(e){console.error(e)}}),[r,t?.toBase58()]),{info:s,account:g,loading:f}=n(),{loading:u,result:p,error:y}=l((async e=>{if(e)return e?.getDelegateWalletSeed()}),[s]),d=a((()=>p?c(p):void 0),[p]);return{error:y,loading:u||f||Boolean(!s&&g),legacyKeypair:i,mnemonic:p,keypair:d,legacyMnemonic:r}}export{g as LocalDelegateWalletStorage,m as delegateWalletStorage,c as getKeypairFromMnemonic,f as useDelegateWallet};
//# sourceMappingURL=useDelegateWallet.js.map
