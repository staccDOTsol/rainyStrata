import{jsxs as e,jsx as i}from"react/jsx-runtime";import{useDisclosure as r,Box as o,Link as a,Modal as t,ModalOverlay as n,ModalContent as s,ModalBody as l,VStack as c,Text as m,Input as d,Alert as g,FormControl as p,FormLabel as u,HStack as f,Button as h,Image as v,Icon as b,FormHelperText as y,Progress as j}from"@chakra-ui/react";import{LoadWalletModal as O}from"./LoadWalletModal.js";import{RiCheckFill as w}from"react-icons/ri";import{yupResolver as C}from"@hookform/resolvers/yup";import{useWallet as x}from"@solana/wallet-adapter-react";import{randomizeFileName as U,uploadFiles as k,IdentifierType as S}from"@strata-foundation/chat";import{useProvider as I,useErrorHandler as W,truncatePubkey as A}from"@strata-foundation/react";import{sendMultipleInstructions as z}from"@strata-foundation/spl-utils";import F,{useState as M,useEffect as P,useCallback as E}from"react";import{useAsyncCallback as L}from"react-async-hook";import{useForm as D,FormProvider as R}from"react-hook-form";import*as T from"yup";import{useChatSdk as N}from"../contexts/chatSdk.js";import{useChatStorageAccountKey as q}from"../hooks/useChatStorageAccountKey.js";import{useLoadDelegate as K}from"../hooks/useLoadDelegate.js";import{useUsernameFromIdentifierCertificate as V}from"../hooks/useUsernameFromIdentifierCertificate.js";import{useWalletProfile as Y}from"../hooks/useWalletProfile.js";import{useAnalyticsEventTracker as $}from"../hooks/useAnalyticsEventTracker.js";import{useWalletFromUsernameIdentifier as B}from"../hooks/useWalletFromUsernameIdentifier.js";import{FormControlWithError as H}from"./form/FormControlWithError.js";const Z=T.object({username:T.string().required().max(28).matches(/^[a-zA-Z0-9_\-]*$/,"Must only contain alphanumeric characters, underscores, or dashes."),image:T.mixed(),imageUrl:T.string()});async function _(e,i,r){if(e){let o=i.imageUrl;r("Creating your Profile...");const{instructions:a,signers:t,output:{certificateMint:n}}=await e.claimIdentifierInstructions({type:S.User,identifier:i.username}),{instructions:s,signers:l}=await e.initializeProfileInstructions({identifierCertificateMint:n,imageUrl:o,identifier:i.username});await z(e.errors||new Map,e.provider,[a[0],[...a[1],...s]],[t[0],[...t[1],...l]])}}function G(S){const z=D({resolver:C(Z),defaultValues:{}}),{publicKey:T}=x(),{register:G,handleSubmit:J,watch:Q,clearErrors:X,setValue:ee,setError:ie,formState:{errors:re,isSubmitting:oe}}=z,[ae,te]=M(""),{execute:ne,loading:se,error:le}=L(_),{chatSdk:ce}=N(),{awaitingApproval:me}=I(),{handleErrors:de}=W(),{isOpen:ge,onClose:pe,onOpen:ue}=r({defaultIsOpen:!0}),{delegateWallet:fe,needsInit:he,error:ve,loadingNeeds:be,loading:ye}=K(),je=$(),{username:Oe,image:we}=Q(),{account:Ce,info:xe,loading:Ue}=Y(T||void 0),{wallet:ke}=B(Oe),{username:Se}=V(xe?.identifierCertificateMint,xe?.ownerWallet),[Ie,We]=M(!1);P((()=>{xe&&ee("imageUrl",xe.imageUrl)}),[xe,ee]),P((()=>{Se&&ee("username",Se)}),[Se,ee]);const Ae=ke&&T&&!ke.equals(T)&&e(o,{children:["Username is already in owned by"," ",i(a,Object.assign({href:`https://explorer.solana.com/${ke.toBase58()}`},{children:A(ke)}),void 0)]},void 0);de(le,ve),P((()=>{!S.isOpen||be||he||pe()}),[ye,S.isOpen,he,pe,be]);const ze=E((()=>{S.onClose&&S.onClose()}),[S.onClose]);q();const Fe=F.useRef(null),[Me,Pe]=M();return P((()=>{(async()=>{if(we){const e=new FileReader;if(e.onload=e=>{Pe(e.target?.result||"")},e.readAsDataURL(we),!Me){We(!0),U(we);let e=!1;try{const i=await k(ce.provider,[we],fe);i&&i.length>0&&(ee("imageUrl",i[0]),e=!0)}catch(e){de(e)}finally{We(!1),e||(ee("imageUrl",void 0),ee("image",void 0),Pe(void 0),ie("image",{message:"Image failed to upload, please try again"}),Fe.current&&(Fe.current.value=""))}}}else Pe(void 0)})()}),[we]),S.isOpen&&ge?i(O,{isOpen:!0,onClose:()=>{S.onClose&&S.onClose(),pe()},onLoaded:()=>{pe()}},void 0):e(t,Object.assign({isOpen:!0,onClose:ze,size:"lg",isCentered:!0,trapFocus:!0},S,{children:[i(n,{},void 0),i(s,Object.assign({borderRadius:"xl",shadow:"xl"},{children:i(l,{children:i(c,Object.assign({pb:4,pt:4,spacing:4,align:"left"},{children:i(R,Object.assign({},z,{children:e("form",Object.assign({onSubmit:J((async function(e){e.username.length<6&&!ke?ie("username",{message:"Username must be at least 6 characters."}):(await ne(ce,e,te),S.onClose&&S.onClose(),je({action:"Create Profile"}))}))},{children:[i(m,Object.assign({fontSize:"xl",fontWeight:"bold",mb:2},{children:"Setup your Profile"}),void 0),e(c,{children:[i(H,Object.assign({id:"username",help:"Your username that will appear in the chat. You own your username. Upon claiming, you will receive a free Cardinal certificate NFT.",label:"Username",errors:re},{children:i(d,Object.assign({},G("username")),void 0)}),void 0),Ae&&i(g,Object.assign({status:"error"},{children:Ae}),void 0),e(p,Object.assign({id:"image"},{children:[i(u,{children:"Upload Picture"},void 0),e(f,Object.assign({w:"full",spacing:4},{children:[i(h,Object.assign({size:"md",colorScheme:"primary",variant:"outline",onClick:()=>Fe.current.click(),disabled:Ie},{children:"Choose Image"}),void 0),we&&e(f,Object.assign({spacing:2,align:"center"},{children:[i(v,{alt:we?.name,w:"32px",h:"32px",src:Me},void 0),i(m,Object.assign({color:"gray.500"},{children:we?.name}),void 0),i(b,{w:"22px",h:"22px",color:"green.400",as:w},void 0)]}),void 0)]}),void 0),i("input",{id:"image",type:"file",accept:".png,.jpg,.gif,.mp4,.svg",multiple:!1,onChange:e=>{const i=e.target.files[0];ee("image",i||null),X("image")},ref:Fe,style:{display:"none"}},void 0),i(y,Object.assign({color:re.image?.message&&"red.400"},{children:re.image?.message||"The image that will be displayed as your pfp. Note that your first upload to SHDW can take up to 3 minutes depending on Solana confirmation times."}),void 0),Ie&&i(j,{size:"xs",isIndeterminate:!0,colorScheme:"orange",mt:2},void 0)]}),void 0),i(h,Object.assign({isDisabled:!!Ae,isLoading:se||Ie,colorScheme:"primary",alignSelf:"flex-end",mr:3,type:"submit",loadingText:Ie?"Uploading":me?"Awaiting Approval":ae},{children:"Save"}),void 0)]},void 0)]}),void 0)}),void 0)}),void 0)},void 0)}),void 0)]}),void 0)}export{G as CreateProfileModal};
//# sourceMappingURL=CreateProfileModal.js.map
